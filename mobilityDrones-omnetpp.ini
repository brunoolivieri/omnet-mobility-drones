[General]
description = "multiple UAVs hovering"
network = mobilityDrones

# Visualizer settings
*.visualizer.osgVisualizer.typename = "IntegratedOsgVisualizer"
*.visualizer.osgVisualizer.sceneVisualizer.typename = "SceneOsgEarthVisualizer"
*.visualizer.osgVisualizer.sceneVisualizer.mapFile = "map.earth"
*.visualizer.osgVisualizer.sceneVisualizer.sceneImageSize = 10000m
*.visualizer.osgVisualizer.sceneVisualizer.axisLength = 500m
*.visualizer.osgVisualizer.sceneVisualizer.sceneMinX = -200m
*.visualizer.osgVisualizer.sceneVisualizer.sceneMinY = -200m
*.visualizer.osgVisualizer.sceneVisualizer.sceneMinZ = 0m
*.visualizer.osgVisualizer.sceneVisualizer.sceneMaxX = 5000m
*.visualizer.osgVisualizer.sceneVisualizer.sceneMaxY = 5000m
*.visualizer.osgVisualizer.sceneVisualizer.sceneMaxZ = 5000m

# network node visualization: disable labels
*.visualizer.osgVisualizer.networkNodeVisualizer.displayModuleName = true

# mobility visualization
*.visualizer.*.mobilityVisualizer.displayMobility = true # master switch
*.visualizer.*.mobilityVisualizer.displayPositions = true
*.visualizer.*.mobilityVisualizer.displayOrientations = true
*.visualizer.*.mobilityVisualizer.displayVelocities = true
*.visualizer.*.mobilityVisualizer.displayMovementTrails = true
*.visualizer.*.mobilityVisualizer.animationSpeed = 10

*.visualizer.mediumVisualizer.displaySignals = true

# mobility constraint area
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 5000m
**.constraintAreaMaxY = 5000m
**.constraintAreaMaxZ = 5000m
# original from 2D: **.updateInterval = 0.1s # test with 0s too, and let getCurrentPosition update the display string from a test module

*.drones*.wlan[0].radio.displayCommunicationRange = true

# Coordinates of the scene origin on the map
#BSB
#*.coordinateSystem.sceneLatitude = -15.84584deg
#*.coordinateSystem.sceneLongitude = -47.93052deg
#*.coordinateSystem.sceneHeading = 90deg

#PUC
*.coordinateSystem.sceneLongitude = -43.22260deg
*.coordinateSystem.sceneLatitude = -22.97556deg
*.coordinateSystem.sceneHeading = 90deg # scene orientation

*.numUAVs = 2
*.drones[*].osgModel = "3d/drone.ive.100.scale.0,0,90.rot"
*.drones[*].mobility.typename = "GotoWaypointMobility"  
*.drones[*].mobility.coordinateSystemModule = "coordinateSystem"
**.mobility.initFromDisplayString = false
# Node position settings
*.drones[0].mobility.initialX = 30m
*.drones[0].mobility.initialY = 30m
*.drones[0].mobility.initialZ = 0m
#**.updateInterval = 0.1s # test with 0s too, and let getCurrentPosition update the display string from a test module
#*.host[*].mobility.changeInterval = 1s
#*.host[*].mobility.initialMovementHeading = uniform(0deg, 360deg)
#*.host[*].mobility.initialMovementElevation = uniform(-90deg, 90deg)
#*.host[*].mobility.angleDelta = uniform(-10deg,10deg)
#*.host[*].mobility.rotationAxisAngle = uniform(-10deg,10deg)
*.drones[*].mobility.speed = uniform(10mps,20mps)
#*.host[*].mobility.faceForward = false
#**.constraintAreaMinZ = 0m


# drone networking:

*.drones[*].numApps = 2
*.drones[*].app[0].typename = "UdpBasicAppMobileNode"
*.drones[*].app[0].destAddresses = "sensor1"
*.drones[*].app[0].destPort = 1000
*.drones[*].app[0].sendInterval = 1s
*.drones[*].app[0].startTime = exponential(1s)
*.drones[*].app[0].messageLength = 1454Byte
*.drones[*].app[0].packetName = "UAV-DEFAULT-PAYLOAD" #packetName is used as a default payload

*.drones[*].app[1].typename = "UdpSinkMobileNode"
*.drones[*].app[1].localPort = 1000








# Node position settings
#*.sensor.osgModel = "3d/drone.ive.100.scale.0,0,90.rot"
*.sensor.mobility.typename = "StationaryMobility"  
#*.sensor*.mobility.coordinateSystemModule = "coordinateSystem"
*.sensor1.mobility.initialX =850m
*.sensor1.mobility.initialY = 850m
*.sensor1.mobility.initialZ = 0m

*.sensor*.numApps = 2
*.sensor*.app[0].typename = "UdpBasicAppMobileSensorNode"
*.sensor*.app[0].destAddresses = "drones[0] drones[1]"
*.sensor*.app[0].destPort = 1000
*.sensor*.app[0].sendInterval = 0.1s
*.sensor*.app[0].startTime = 1s #exponential(1s)
*.sensor*.app[0].messageLength = 1454Byte
*.sensor*.app[0].packetName = "SENSOR-DEFAULT-PAYLOAD" #packetName is used as a default payload

*.sensor*.app[1].typename = "UdpSinkMobileSensorNode"
*.sensor*.app[1].localPort = 1000


