[General]
network = mobilityDrones

# scene visualization
*.visualizer.osgVisualizer.typename = "IntegratedOsgVisualizer"
*.visualizer.osgVisualizer.sceneVisualizer.clearColor = "skyblue"
*.visualizer.osgVisualizer.sceneVisualizer.sceneImage = "showcases/desert"
*.visualizer.osgVisualizer.sceneVisualizer.sceneImageSize = 500m
*.visualizer.osgVisualizer.sceneVisualizer.axisLength = 500m
*.visualizer.osgVisualizer.sceneVisualizer.sceneMinX = -300m
*.visualizer.osgVisualizer.sceneVisualizer.sceneMinY = -300m
*.visualizer.osgVisualizer.sceneVisualizer.sceneMinZ = 0m
*.visualizer.osgVisualizer.sceneVisualizer.sceneMaxX = 300m
*.visualizer.osgVisualizer.sceneVisualizer.sceneMaxY = 300m
*.visualizer.osgVisualizer.sceneVisualizer.sceneMaxZ = 200m

# network node visualization: disable labels
*.visualizer.osgVisualizer.networkNodeVisualizer.displayModuleName = false

# mobility visualization
*.visualizer.*.mobilityVisualizer.displayMobility = true # master switch
*.visualizer.*.mobilityVisualizer.displayPositions = true
*.visualizer.*.mobilityVisualizer.displayOrientations = true
*.visualizer.*.mobilityVisualizer.displayVelocities = true
*.visualizer.*.mobilityVisualizer.displayMovementTrails = true
*.visualizer.*.mobilityVisualizer.animationSpeed = 1

# mobility constraint area
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 500m
**.constraintAreaMaxY = 500m
**.constraintAreaMaxZ = 100m
# original from 2D: **.updateInterval = 0.1s # test with 0s too, and let getCurrentPosition update the display string from a test module


# no configurator needed (there is no communication between hosts)
**.networkConfiguratorModule = ""

[Config Drone]
description = "Random Way point std."
*.numHosts = 3
*.host[*].osgModel = "3d/drone.ive.100.scale.0,0,90.rot"

*.host[*].mobility.typename = "RandomWaypointMobility"
**.host*.mobility.initFromDisplayString = false
**.updateInterval = 0.1s # test with 0s too, and let getCurrentPosition update the display string from a test module


#*.host[*].mobility.changeInterval = 1s
#*.host[*].mobility.initialMovementHeading = uniform(0deg, 360deg)
#*.host[*].mobility.initialMovementElevation = uniform(-90deg, 90deg)
#*.host[*].mobility.angleDelta = uniform(-10deg,10deg)
#*.host[*].mobility.rotationAxisAngle = uniform(-10deg,10deg)
*.host[*].mobility.speed = uniform(10mps,20mps)
#*.host[*].mobility.faceForward = false

**.constraintAreaMinZ = 0m
